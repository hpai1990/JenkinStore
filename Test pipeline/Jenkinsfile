import groovy.xml.StreamingMarkupBuilder
def testxml = null

@NonCPS
def generateXML() {
    
   def testclasses = params.test_classes.split('-')
   println testclasses[0]
   def writer = new StringWriter()
   def xmlBuilder = new StreamingMarkupBuilder()
   xmlBuilder.encoding = 'UTF-8'
  
   writer = xmlBuilder.bind {
    
        mkp.yieldUnescaped '<?xml version="1.0" encoding="UTF-8"?>\n'
        mkp.yieldUnescaped '<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">'
        delegate.suite(name:'Suite'){
            delegate.test(name:'Sample test'){
                mkp.yieldUnescaped "<parameter name=\"browser\" value=\"${params.browser}\"/>"
                delegate.groups{
                    delegate.run{
                        mkp.yieldUnescaped "<include name = \"${params.groups}\" />"
                    }
                }
                
                delegate.classes{
                    testclasses.eachWithIndex { classname, index ->
                    mkp.yieldUnescaped "<class name=\"$classname\"/>"
                    }
                }
            }
        }
    }      

return XmlUtil.serialize(writer)
           
}

node('mavennode'){
    stage 'Integration test'
        checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '1ab09c9e-36aa-4285-b73c-7e4d36675372', url: "https://github.com/hpai1990/ApiTesting"]]])
        
        testxml=generateXML()
        try{
             sh """#!/bin/bash
                echo '${testxml}' > src/test/resources/suites/testng.xml
                cat src/test/resources/suites/testng.xml
                mvn clean install
                
                """
         } 
        catch (error) {
             throw error
        } 
        finally {
            //test reporting
            sh 'mvn allure:report'
             junit keepLongStdio: true, testResults: 'target/surefire-reports/junitreports/*.xml'
             publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'target/allure-report', reportFiles: 'index.html', reportName: 'Integration Test Report', reportTitles: ''])

        } 
        
}
